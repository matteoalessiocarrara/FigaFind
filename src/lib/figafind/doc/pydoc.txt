Help on module figafind:

NAME
    figafind

DESCRIPTION
    # -*- coding: utf-8 -*-
    #
    #  Copyright 2016 Matteo Alessio Carrara <sw.matteoac@gmail.com>
    #
    #  This program is free software; you can redistribute it and/or modify
    #  it under the terms of the GNU General Public License as published by
    #  the Free Software Foundation; either version 2 of the License, or
    #  (at your option) any later version.
    #
    #  This program is distributed in the hope that it will be useful,
    #  but WITHOUT ANY WARRANTY; without even the implied warranty of
    #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    #  GNU General Public License for more details.
    #
    #  You should have received a copy of the GNU General Public License
    #  along with this program; if not, write to the Free Software
    #  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
    #  MA 02110-1301, USA.

FUNCTIONS
    figafind(email, password, group_url, human_emulation_enabled=True, caching_level=1, processes=1, sleep_before_login=5, gay=False)
        Trova tutte le ragazze in un gruppo su Facebook
        Restituisce una lista di profili. Ogni profilo è un dizionario, il formato è
        quello del return di htmlfbapi.Facebook.get_group().get_members()
        
        Parametri:
        
                email: str
                
                password: str
                
                human_emulation_enabled: bool
                        Attiva o disattiva la modalità di emulazione umana, che cerca di
                        ingannare l'intelligenza artificiale di Facebook facendogli credere
                        che il bot non è un bot
                
                caching_level: int
                        È possibile usare una cache per evitare di dover recuperare troppo
                        spesso alcune informazioni dal server. Questo velocizza la libreria,
                        ma in alcuni casi i dati potrebbero essere non aggiornati.
                        Sono disponibili vari livelli di caching, vedere il dizionario 
                        lib.htmlfbapi.src.lib.fbwrapper.src.shared.caching_levels
        
                processes: int
                        Il numero di processi da utilizzare per il download dei profili e 
                        il successivo controllo
                        ATTENZIONE: usando troppi processi Facebook potrebbe dare un errore
                        di login per i troppi tentativi; inoltre questo potrebbe rallentare
                        invece che velocizzare se ci sono pochi profili, visto che ogni processo
                        deve rifare il login.
                        
                sleep_before_login: int
                        Tempo di attesa fra il login di ogni processo. Può essere anche 0,
                        ma molto probabilmente Facebook vi prenderà a calci in culo e si 
                        bloccherà il programma con un errore di login
        
                gay: bool
                        Trasforma FigaFind i CazzoFind :)

DATA
    caching_levels = {'disabled': 0, 'offline': 3, 'safe': 1, 'unsafe': 2}
    logger = <logging.Logger object>


Help on module filter_rules:

NAME
    filter_rules - Regole per il filtro lib.fbfilter.src.fbfilter.FbFilter

CLASSES
    lib.fbfilter.src.filter_components.FilterRules(__builtin__.object)
        CazzoFind
        FigaFind
    
    class CazzoFind(lib.fbfilter.src.filter_components.FilterRules)
     |  Method resolution order:
     |      CazzoFind
     |      lib.fbfilter.src.filter_components.FilterRules
     |      __builtin__.object
     |  
     |  Methods defined here:
     |  
     |  required_property_custom_test(self, profile)
     |      Controlla se il profilo soddisfa i requisiti richiesti, con dei test 
     |      personalizzati
     |      Restituisce True o False
     |      
     |      Parametri:
     |      
     |              profile: lib.htmlfbapi.fbobj.Profile
     |                      Il profilo da controllare
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from lib.fbfilter.src.filter_components.FilterRules:
     |  
     |  optional_property_custom_test(self, profile)
     |      Controlla quali requisiti opzionali sono soddisfatti dal profilo, con dei test
     |      personalizzati
     |      Restituisce una lista con i nomi dei requisiti soddisfatti
     |      
     |      Parametri:
     |      
     |              profile: lib.htmlfbapi.fbobj.Profile
     |                      Il profilo da controllare
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from lib.fbfilter.src.filter_components.FilterRules:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from lib.fbfilter.src.filter_components.FilterRules:
     |  
     |  optional_property_for_equality_test = {}
     |  
     |  required_property_for_equality_test = {}
    
    class FigaFind(lib.fbfilter.src.filter_components.FilterRules)
     |  Method resolution order:
     |      FigaFind
     |      lib.fbfilter.src.filter_components.FilterRules
     |      __builtin__.object
     |  
     |  Methods defined here:
     |  
     |  required_property_custom_test(self, profile)
     |      Controlla se il profilo soddisfa i requisiti richiesti, con dei test 
     |      personalizzati
     |      Restituisce True o False
     |      
     |      Parametri:
     |      
     |              profile: lib.htmlfbapi.fbobj.Profile
     |                      Il profilo da controllare
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from lib.fbfilter.src.filter_components.FilterRules:
     |  
     |  optional_property_custom_test(self, profile)
     |      Controlla quali requisiti opzionali sono soddisfatti dal profilo, con dei test
     |      personalizzati
     |      Restituisce una lista con i nomi dei requisiti soddisfatti
     |      
     |      Parametri:
     |      
     |              profile: lib.htmlfbapi.fbobj.Profile
     |                      Il profilo da controllare
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from lib.fbfilter.src.filter_components.FilterRules:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from lib.fbfilter.src.filter_components.FilterRules:
     |  
     |  optional_property_for_equality_test = {}
     |  
     |  required_property_for_equality_test = {}

DATA
    logger = <logging.Logger object>


Help on module version:

NAME
    version

DESCRIPTION
    Informazioni sulla libreria - contiene le informazioni solitamente ottenibili con 
    il parametro --version nei software GNU

DATA
    copyright = 'Copyright (C) 2015 - 2016 Matteo Alessio Carrara'
    fbfilter_version_required = 1
    htmlfbapi_version_required = 4
    lib_name = 'lib-figafind'
    license = 'License GPLv3+: GNU GPL version 3 or later <http...e is NO ...
    version_major = 2
    version_minor = 3
    version_patch = 0
    version_str = '2.3.0'


